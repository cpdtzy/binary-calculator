{"version":3,"sources":["binaryCalculator.ts"],"names":[],"mappings":"AAAA,CAAC;IACG,IAAM,GAAG,GAAG,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAC3C,IAAM,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;IACjD,IAAM,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;IAEjD,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IACpB,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IACpB,SAAS,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;IACzB,SAAS,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;IACzB,SAAS,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;IACzB,SAAS,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;IAGzB,MAAM,CAAC,OAAO,GAAG;QACb,GAAG,CAAC,SAAS,GAAG,EAAE,CAAC;IACvB,CAAC,CAAA;IAED,MAAM,CAAC,OAAO,GAAG;QACb,IAAM,KAAK,GAAG,GAAG,CAAC,SAAS,CAAC;QAC5B,IAAM,IAAI,GAAG,IAAI,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;QAE5C,IAAK,CAAC,KAAK,EAAG;YACV,KAAK,CAAC,mBAAmB,CAAC,CAAC;SAE9B;aAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAG;YAC3B,KAAK,CAAC,oBAAoB,CAAC,CAAC;SAE/B;aAAM;YACH,SAAS,CAAC,KAAK,CAAC,CAAC;SACpB;QAED,mBAAmB,KAAa;YAC5B,IAAM,GAAG,GAAG,MAAM,CAAC;YACnB,IAAM,GAAG,GAAG,MAAM,CAAC;YACnB,IAAM,GAAG,GAAG,MAAM,CAAC;YACnB,IAAM,GAAG,GAAG,MAAM,CAAC;YAEnB,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;gBACf,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;iBAEzB,IAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;gBACnB,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;iBAEzB,IAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;gBACnB,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;iBAEzB,IAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;gBACnB,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;YAE9B,qBAAqB,MAAc,EAAE,MAAc;gBAC/C,IAAM,MAAM,GAAa,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBAG9C,IAAM,WAAW,GAAG,IAAI,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChE,IAAI,MAAc,CAAC;gBACnB,QAAO,MAAM,EAAE;oBACX,KAAK,KAAK;wBACN,MAAM,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;wBAC/B,MAAM;oBACN,KAAK,KAAK;wBACN,MAAM,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;wBAC/B,MAAM;oBACN,KAAK,KAAK;wBACN,MAAM,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;wBAC/B,MAAM;oBACN,KAAK,KAAK;wBACN,MAAM,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;wBAC/B,MAAM;iBACT;gBAED,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC;YAC3B,CAAC;QACL,CAAC;IACL,CAAC,CAAA;IAED,kBAAkB,OAAe,EAAE,KAAa;QAC5C,IAAM,GAAG,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAE7C,GAAG,CAAC,OAAO,GAAG;YAEV,GAAG,CAAC,SAAS,IAAI,KAAK,CAAC;QAC3B,CAAC,CAAA;IACL,CAAC;IAED,mBAAmB,OAAe,EAAE,WAAmB;QACnD,IAAM,GAAG,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAE7C,GAAG,CAAC,OAAO,GAAG;YACV,IAAM,IAAI,GAAG,IAAI,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YAC5C,IAAI,MAAM,GAAG,GAAG,CAAC,SAAS,CAAC;YAE3B,IAAI,CAAC,MAAM;gBACP,KAAK,CAAC,mBAAmB,CAAC,CAAC;iBAE1B,IAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;gBACrB,OAAO;iBAEN;gBACD,MAAM,GAAG,GAAG,CAAC,SAAS,CAAC;gBACvB,GAAG,CAAC,SAAS,IAAI,GAAG,GAAG,WAAW,GAAG,GAAG,CAAC;aAC5C;QACL,CAAC,CAAA;IACL,CAAC;IAGD;QAII,2BAAmB,KAAa,EAAS,MAAc;YAApC,UAAK,GAAL,KAAK,CAAQ;YAAS,WAAM,GAAN,MAAM,CAAQ;YACnD,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QACvC,CAAC;QAEM,+BAAG,GAAV;YACI,IAAM,GAAG,GAAW,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;YAE/C,OAAO,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC;QAEM,+BAAG,GAAV;YACI,IAAM,GAAG,GAAW,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;YAE/C,OAAO,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC;QAEM,+BAAG,GAAV;YACI,IAAM,GAAG,GAAW,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;YAE/C,OAAO,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC;QAEM,+BAAG,GAAV;YACI,IAAM,GAAG,GAAW,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;YAE/C,OAAO,IAAI,CAAC,KAAK,CAAE,MAAM,CAAE,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAE,CAAE,CAAC,QAAQ,EAAE,CAAC;QAC9D,CAAC;QACL,wBAAC;IAAD,CAhCA,AAgCC,IAAA;AACL,CAAC,CAAC,EAAE,CAAC","file":"binaryCalculator.js","sourcesContent":["(function () {\r\n    const res = document.getElementById('res');\r\n    const btnClr = document.getElementById('btnClr');\r\n    const btnEql = document.getElementById('btnEql');\r\n\r\n    addValue(\"btn1\", 1);\r\n    addValue(\"btn0\", 0);\r\n    addSymbol(\"btnSum\", '+');\r\n    addSymbol(\"btnSub\", '-');\r\n    addSymbol(\"btnMul\", '*');\r\n    addSymbol(\"btnDiv\", '/');\r\n\r\n    // clear value\r\n    btnClr.onclick = () => {\r\n        res.innerHTML = '';\r\n    }\r\n\r\n    btnEql.onclick = () => {\r\n        const value = res.innerHTML;\r\n        const test = new RegExp('[\\+\\-\\/\\*]', 'ig');\r\n\r\n        if ( !value ) {\r\n            alert(\"Please add value.\");\r\n\r\n        } else if( !test.test(value) ) {\r\n            alert(\"Please add symbol.\");\r\n\r\n        } else {\r\n            getAnswer(value);\r\n        }\r\n\r\n        function getAnswer(value: string): void {\r\n            const sum = /\\+/ig;\r\n            const sub = /\\-/ig;\r\n            const mul = /\\*/ig;\r\n            const div = /\\//ig;\r\n\r\n            if (sum.test(value)) \r\n                getFinished(value, ' + ');\r\n\r\n            else if(sub.test(value))\r\n                getFinished(value, ' - ');\r\n\r\n            else if(mul.test(value))\r\n                getFinished(value, ' * ');\r\n            \r\n            else if(div.test(value))\r\n                getFinished(value, ' / ');\r\n\r\n            function getFinished(value2: string, symbol: string): void {\r\n                const number: string[] = value2.split(symbol);\r\n\r\n                // continue not finish.\r\n                const calculation = new BinaryCalculation(number[0], number[1]);\r\n                let answer: string;\r\n                switch(symbol) {\r\n                    case ' + ':\r\n                        answer = calculation.sum(); \r\n                    break;\r\n                    case ' - ':\r\n                        answer = calculation.sub();\r\n                    break;\r\n                    case ' * ':\r\n                        answer = calculation.mul();\r\n                    break;\r\n                    case ' / ':\r\n                        answer = calculation.div();\r\n                    break;\r\n                }\r\n\r\n                res.innerHTML = answer;\r\n            }\r\n        }\r\n    }\r\n    \r\n    function addValue(element: string, value: number): void {\r\n        const obj = document.getElementById(element);\r\n\r\n        obj.onclick = () => {\r\n\r\n            res.innerHTML += value;\r\n        }\r\n    }\r\n\r\n    function addSymbol(element: string, symbolValue: string): void {\r\n        const obj = document.getElementById(element);\r\n\r\n        obj.onclick = () => {\r\n            const test = new RegExp('[\\+\\-\\/\\*]', 'ig');\r\n            let value1 = res.innerHTML;\r\n\r\n            if (!value1) \r\n                alert(\"Please add value.\");\r\n\r\n            else if(test.test(value1))\r\n                return;\r\n                \r\n            else {\r\n                value1 = res.innerHTML;\r\n                res.innerHTML += ' ' + symbolValue + ' ';\r\n            }\r\n        }\r\n    }\r\n\r\n    // binary calculation formula\r\n    class BinaryCalculation {\r\n        number: number;\r\n        number2: number;\r\n\r\n        constructor(public value: string, public value1: string) {\r\n            this.number = parseInt(value, 2);\r\n            this.number2 = parseInt(value1, 2);\r\n        }\r\n\r\n        public sum() {\r\n            const sum: number = this.number + this.number2;\r\n            \r\n            return sum.toString(2);\r\n        }\r\n\r\n        public sub() {\r\n            const sub: number = this.number - this.number2;\r\n\r\n            return sub.toString(2);\r\n        }\r\n\r\n        public mul() {\r\n            const mul: number = this.number * this.number2;\r\n\r\n            return mul.toString(2);\r\n        }\r\n\r\n        public div() {\r\n            const mul: number = this.number / this.number2;\r\n\r\n            return Math.round( Number( mul.toString(2) ) ).toString();\r\n        }\r\n    }\r\n})();"]}